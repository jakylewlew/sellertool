/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sellertool;
import java.awt.Dimension;
import DataStore.Dinosaur;
import DataStore.MakeBoneDialog;
import DataStore.ModifyBone;
import DataStore.RemovePrompt;
import DataStore.SuggestPrice;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Formatter;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
/**
 *
 * @author Jacob
 */
public class GUIcomponent extends javax.swing.JFrame{
   Sellertool GUISellertool = new Sellertool();
   Dinosaur temp;
   SuggestPrice prompt;
   int i;
   Formatter output = new Formatter(System.out);
   ModifyBone mod;
   RemovePrompt rmprompt;
   File file;
   Dimension d;
   JLabel map_label;
     /**
     * Creates new form GUIcomponent
     */
    //Sellertool maintool = new Sellertool();
    public GUIcomponent() {
        initComponents();
        map_label = new JLabel(new ImageIcon(new ImageIcon("WorldMap.png").getImage().getScaledInstance(3600/3,1800/3,Image.SCALE_SMOOTH)));
        map_label.setSize(3600/3,1800/3);
        map_label.setBackground(Color.MAGENTA);
        d = new Dimension();
        map_label.setMaximumSize(d);
        this.add(map_label);
        load_world_map();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        MenuBAR = new javax.swing.JMenuBar();
        filemenudropdown = new javax.swing.JMenu();
        LoadFilesSele = new javax.swing.JMenuItem();
        SaveFilesSele = new javax.swing.JMenuItem();
        ExitSele = new javax.swing.JMenuItem();
        MapDropDown = new javax.swing.JMenu();
        ChangeLocationSele = new javax.swing.JMenuItem();
        SellerDropDownMenu = new javax.swing.JMenu();
        NewSeller = new javax.swing.JMenuItem();
        DeleteSeller = new javax.swing.JMenuItem();
        ListSeller = new javax.swing.JMenuItem();
        BoneMenu = new javax.swing.JMenu();
        MakeBoneSele = new javax.swing.JMenuItem();
        Sell = new javax.swing.JMenuItem();
        ModifyBone = new javax.swing.JMenuItem();
        RemoveBone = new javax.swing.JMenuItem();

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\Jacob\\Documents\\GitHub\\sellertool"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        filemenudropdown.setText("File");

        LoadFilesSele.setText("Load");
        LoadFilesSele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadFilesSeleActionPerformed(evt);
            }
        });
        filemenudropdown.add(LoadFilesSele);

        SaveFilesSele.setText("Save");
        SaveFilesSele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFilesSeleActionPerformed(evt);
            }
        });
        filemenudropdown.add(SaveFilesSele);

        ExitSele.setActionCommand("Exit");
        ExitSele.setLabel("Exit");
        ExitSele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitSeleActionPerformed(evt);
            }
        });
        filemenudropdown.add(ExitSele);

        MenuBAR.add(filemenudropdown);

        MapDropDown.setLabel("Map");

        ChangeLocationSele.setLabel("ChangeLocation");
        ChangeLocationSele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeLocationSeleActionPerformed(evt);
            }
        });
        MapDropDown.add(ChangeLocationSele);

        MenuBAR.add(MapDropDown);

        SellerDropDownMenu.setLabel("Seller");

        NewSeller.setLabel("NewSeller");
        SellerDropDownMenu.add(NewSeller);

        DeleteSeller.setLabel("DeleteSeller");
        SellerDropDownMenu.add(DeleteSeller);

        ListSeller.setLabel("ListSellers");
        ListSeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListSellerActionPerformed(evt);
            }
        });
        SellerDropDownMenu.add(ListSeller);

        MenuBAR.add(SellerDropDownMenu);

        BoneMenu.setLabel("Bone");

        MakeBoneSele.setLabel("MakeBone");
        MakeBoneSele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeBoneSeleActionPerformed(evt);
            }
        });
        BoneMenu.add(MakeBoneSele);

        Sell.setLabel("SellBone");
        Sell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellActionPerformed(evt);
            }
        });
        BoneMenu.add(Sell);

        ModifyBone.setLabel("ModifyBone");
        ModifyBone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyBoneActionPerformed(evt);
            }
        });
        BoneMenu.add(ModifyBone);

        RemoveBone.setLabel("RemoveBone");
        RemoveBone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBoneActionPerformed(evt);
            }
        });
        BoneMenu.add(RemoveBone);

        MenuBAR.add(BoneMenu);

        setJMenuBar(MenuBAR);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 930, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 676, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveFilesSeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFilesSeleActionPerformed
        //save the files
        //GUISellertool.mainmenu("savefiles");  //have to rewrte to feed in variable files
        jFileChooser1.showOpenDialog(null);
        file = jFileChooser1.getSelectedFile();
        GUISellertool.savefile(file);
    }//GEN-LAST:event_SaveFilesSeleActionPerformed

    private void LoadFilesSeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadFilesSeleActionPerformed
      //load files
      
      jFileChooser1.showOpenDialog(null);
      file = jFileChooser1.getSelectedFile(); //have to rewrte to feed in variable files
      GUISellertool.makeabonefromfiles(file);
                          
    }//GEN-LAST:event_LoadFilesSeleActionPerformed

    private void SellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellActionPerformed
        // TODO add your handling code here:
        mod = new ModifyBone(this, true, GUISellertool);
    }//GEN-LAST:event_SellActionPerformed

    private void ListSellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListSellerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListSellerActionPerformed

    private void ExitSeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitSeleActionPerformed
        // System Exit
       System.exit(0);
    }//GEN-LAST:event_ExitSeleActionPerformed

    private void ChangeLocationSeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeLocationSeleActionPerformed
        // ChangeBone Location
    }//GEN-LAST:event_ChangeLocationSeleActionPerformed

    private void MakeBoneSeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeBoneSeleActionPerformed
        // TODO add your handling code here:
        MakeBoneDialog makebone = new MakeBoneDialog(this,true,GUISellertool); //pass pointer to the GGUI seller 
        makebone.setVisible(true); 
        
       //do the suggested price thing here 
        i = GUISellertool.bonelist.size(); //gets the pos of last bone to use to call sugg price
        i = i-1;
        prompt = new SuggestPrice(this,true,GUISellertool.bonelist.get(i)); //calls suggestprice prompt
        GUISellertool.printbonelist();
         makebone.dispose();
    }//GEN-LAST:event_MakeBoneSeleActionPerformed

    private void ModifyBoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyBoneActionPerformed
        // TODO add your handling code here:
         mod = new ModifyBone(this, true, GUISellertool);
    }//GEN-LAST:event_ModifyBoneActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formComponentAdded

    private void RemoveBoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBoneActionPerformed
        // TODO add your handling code here:
        rmprompt = new RemovePrompt(this, true, GUISellertool);
        
    }//GEN-LAST:event_RemoveBoneActionPerformed

    public void load_world_map() {
           
        try{
            //open world map file
            File wm = new File("WorldMap.png");
            //create worldmap image
            BufferedImage map_ = ImageIO.read(wm);
            for(int i=0; i<1800; ++i) {
                for(int j=0; j<3600; ++j) {
                    Color c = new Color(map_.getRGB(j, i));
                    int red = c.getRed();
                    int green = c.getGreen();
                    int blue = c.getBlue();
                    if(red == 0 && green == 0 && blue == 255) {
                        //its blue
                        this.map[j][i] = '.';
                    }
                    else{
                        //its green
                        this.map[j][i] = '*';
                    }
                }
            }
            
        }
        catch(IOException ex) {
            //do something
        }
    }
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIcomponent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIcomponent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIcomponent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIcomponent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIcomponent().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu BoneMenu;
    private javax.swing.JMenuItem ChangeLocationSele;
    private javax.swing.JMenuItem DeleteSeller;
    private javax.swing.JMenuItem ExitSele;
    private javax.swing.JMenuItem ListSeller;
    private javax.swing.JMenuItem LoadFilesSele;
    private javax.swing.JMenuItem MakeBoneSele;
    private javax.swing.JMenu MapDropDown;
    private javax.swing.JMenuBar MenuBAR;
    private javax.swing.JMenuItem ModifyBone;
    private javax.swing.JMenuItem NewSeller;
    private javax.swing.JMenuItem RemoveBone;
    private javax.swing.JMenuItem SaveFilesSele;
    private javax.swing.JMenuItem Sell;
    private javax.swing.JMenu SellerDropDownMenu;
    private javax.swing.JMenu filemenudropdown;
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
